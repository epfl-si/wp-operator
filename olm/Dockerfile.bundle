# ⚠ This Dockerfile needs to be built from the directory above this one!
#
#   cd ..
#   docker build -t quay-its.epfl.ch/svc0041/wordpress-olm-bundle:v0.0.1 \
#       -f olm/Dockerfile.bundle .
#
FROM ubuntu:focal AS builder

RUN export DEBIAN_FRONTEND=noninteractive; \
    apt -qy update; apt -qy install curl

# → https://github.com/operator-framework/operator-sdk/releases
ARG operator_sdk_release=v1.38.0

# → https://sdk.operatorframework.io/docs/installation/#install-from-github-release
RUN set -e -x; \
    export ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac) ; \
    export OS=$(uname | awk '{print tolower($0)}') ; \
    export OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/download/${operator_sdk_release}; \
    curl -Lo /usr/local/bin/operator-sdk ${OPERATOR_SDK_DL_URL}/operator-sdk_${OS}_${ARCH}; \
    chmod +x /usr/local/bin/operator-sdk

RUN mkdir /bundle-gen
COPY olm/controller-deployment-and-rbac.yaml \
     olm/clusterserviceversion-tmpl.yaml \
     conversion-webhook/webhook.yaml \
     WordPressSite-crd.yaml \
     /bundle-gen

ARG BUNDLE_VERSION=0.0.93

RUN set -e -x; cd /bundle-gen; \
    sed -i 's|#\( *image\): controller:latest| \1: anonymous.apps.t-ocp-its-01.xaas.epfl.ch/svc0041/wordpress-olm-controller:v'"${BUNDLE_VERSION}"'|' controller-deployment-and-rbac.yaml; \
    (for i in *.yaml; do cat $i; echo "---"; done) | operator-sdk generate bundle \
        --package wordpress-operator \
        --verbose --output-dir . --version ${BUNDLE_VERSION}

# A few sanity checks, as `operator-sdk generate bundle` has a tendency
# to fail silently:
RUN test -f                                                /bundle-gen/manifests/*clusterserviceversion.yaml
RUN ! grep 'deployments: \[\]'                             /bundle-gen/manifests/*clusterserviceversion.yaml
RUN grep ISAS-FSD                                          /bundle-gen/manifests/*clusterserviceversion.yaml
RUN grep 'clusterPermissions:'                             /bundle-gen/manifests/*clusterserviceversion.yaml
RUN grep 'image: anonymous.apps.t-ocp-its-01.xaas.epfl.ch' /bundle-gen/manifests/*clusterserviceversion.yaml
RUN ! grep 'customresourcedefinitions: {}'                 /bundle-gen/manifests/*clusterserviceversion.yaml

# Temporary — Webhook is only required while the CRD transitions from v1 to v2:
RUN grep "webhookdefinitions:"                             /bundle-gen/manifests/*clusterserviceversion.yaml
RUN grep "type: ConversionWebhook"                         /bundle-gen/manifests/*clusterserviceversion.yaml
RUN ! grep "admissionReviewVersions: null"                 /bundle-gen/manifests/*clusterserviceversion.yaml
RUN grep "name: wordpresssite-conversion-webhook"          /bundle-gen/manifests/*clusterserviceversion.yaml
RUN grep -v 'namespace: ""'                                /bundle-gen/manifests/*clusterserviceversion.yaml

# Yup, that's ourselves:
COPY olm/Dockerfile.bundle /bundle-gen
RUN set -e -x; \
    mkdir /metadata; \
    ( echo "annotations:" ; \
      sed -ne 's/^LABEL \(.*\)=\(.*\)$/  \1: \2/p' \
          < /bundle-gen/Dockerfile.bundle ) > /metadata/annotations.yaml

FROM scratch

LABEL operators.operatorframework.io.bundle.mediatype.v1=registry+v1
LABEL operators.operatorframework.io.bundle.manifests.v1=manifests/
LABEL operators.operatorframework.io.bundle.metadata.v1=metadata/
LABEL operators.operatorframework.io.bundle.package.v1=wordpress-operator-olm

COPY --from=builder /bundle-gen/manifests /manifests
COPY --from=builder /metadata /metadata
